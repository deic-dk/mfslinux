#!/bin/bash

########################
### Set variables
########################
SCRIPTDIR=$( dirname -- "$0"; )
. "$SCRIPTDIR/set_params"
########################

####################################
### Driver and toolkit installation
####################################

# Install kernel sources
apt install linux-source-`uname -r | sed 's|-.*||'`

# Pin CUDA apt repo
curl -L https://developer.download.nvidia.com/compute/cuda/repos/ubuntu2204/x86_64/cuda-ubuntu2204.pin \
-o /etc/apt/preferences.d/cuda-repository-pin-600

# Add CUDA apt repo
curl -LO \
https://developer.download.nvidia.com/compute/cuda/12.5.0/local_installers/cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
dpkg -i cuda-repo-ubuntu2204-12-5-local_12.5.0-555.42.02-1_amd64.deb
cp /var/cuda-repo-ubuntu2204-12-5-local/cuda-*-keyring.gpg /usr/share/keyrings/
apt update

# Install drivers and toolkit
apt install cuda-drivers
apt install cuda-toolkit
echo "options nvidia NVreg_OpenRmEnableUnsupportedGpus=1" > /etc/modprobe.d/nvidia-gsp.conf

####################################
### Kubernetes integration
####################################

curl -fsSL https://nvidia.github.io/libnvidia-container/gpgkey | \
gpg --dearmor -o /usr/share/keyrings/nvidia-container-toolkit-keyring.gpg && \
curl -s -L https://nvidia.github.io/libnvidia-container/stable/deb/nvidia-container-toolkit.list | \
sed 's#deb https://#deb [signed-by=/usr/share/keyrings/nvidia-container-toolkit-keyring.gpg] https://#g' > \
/etc/apt/sources.list.d/nvidia-container-toolkit.list

apt install nvidia-container-toolkit
nvidia-ctk runtime configure --runtime=crio

sed -i 's|runtimes = \["docker-runc"|runtimes = ["/usr/lib/cri-o-runc/sbin/runc", "docker-runc"|' /etc/nvidia-container-runtime/config.toml



